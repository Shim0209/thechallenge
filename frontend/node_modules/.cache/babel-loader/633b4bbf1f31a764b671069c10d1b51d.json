{"ast":null,"code":"var _jsxFileName = \"/Users/shimys/Desktop/react-spring-workspace/thechallenge/frontend/src/components/auth/Oauth2Redirect.js\";\nimport React from 'react';\nimport queryString from 'query-string';\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Oauth2Redirect = ({\n  location\n}) => {\n  const query = queryString.parse(location.search);\n  const accessToken = query.Authorization;\n  const jwtToken = accessToken.replace('Bearer', '');\n  const decoded = jwt_decode(jwtToken);\n  const expiredTime = decoded.exp + '000';\n  localStorage.setItem('AccessToken', query.Authorization);\n  localStorage.setItem('ExpiredTime', expiredTime);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Oauth2Redirect\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Oauth2Redirect;\nexport default Oauth2Redirect;\n\nvar _c;\n\n$RefreshReg$(_c, \"Oauth2Redirect\");","map":{"version":3,"sources":["/Users/shimys/Desktop/react-spring-workspace/thechallenge/frontend/src/components/auth/Oauth2Redirect.js"],"names":["React","queryString","jwt_decode","Oauth2Redirect","location","query","parse","search","accessToken","Authorization","jwtToken","replace","decoded","expiredTime","exp","localStorage","setItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACnC,QAAMC,KAAK,GAAGJ,WAAW,CAACK,KAAZ,CAAkBF,QAAQ,CAACG,MAA3B,CAAd;AAEA,QAAMC,WAAW,GAAGH,KAAK,CAACI,aAA1B;AACA,QAAMC,QAAQ,GAAGF,WAAW,CAACG,OAAZ,CAAoB,QAApB,EAA6B,EAA7B,CAAjB;AACA,QAAMC,OAAO,GAAGV,UAAU,CAACQ,QAAD,CAA1B;AACA,QAAMG,WAAW,GAAGD,OAAO,CAACE,GAAR,GAAY,KAAhC;AAEAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCX,KAAK,CAACI,aAA1C;AACAM,EAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCH,WAApC;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAdD;;KAAMV,c;AAkBN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport queryString from 'query-string';\nimport jwt_decode from 'jwt-decode';\n\nconst Oauth2Redirect = ({location}) => {\n    const query = queryString.parse(location.search);\n\n    const accessToken = query.Authorization;\n    const jwtToken = accessToken.replace('Bearer','');\n    const decoded = jwt_decode(jwtToken); \n    const expiredTime = decoded.exp+'000';\n\n    localStorage.setItem('AccessToken', query.Authorization);\n    localStorage.setItem('ExpiredTime', expiredTime);\n    \n    return (\n        <h1>Oauth2Redirect</h1>\n    )\n};\n            \n  \n\nexport default Oauth2Redirect;"]},"metadata":{},"sourceType":"module"}