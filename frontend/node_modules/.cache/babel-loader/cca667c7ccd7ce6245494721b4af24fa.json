{"ast":null,"code":"import jwt_decode from 'jwt-decode';\n/**\n * 페이지 전환시 JWT 인증을 진행\n * 1. accessToken이 있는가?  \n *  - 로컬스토리지에서 가져와서 검사\n * 2. JWT Token의 만료시간이 지났는가?\n *  - 정상적인 토큰일 경우 만료시간 검사\n * @returns \n *  - JWT 인증 성공 : true\n *  - JWT 인증 실패 : false\n */\n\nconst verifJwt = props => {\n  // 1\n  const accessToken = localStorage.getItem('AccessToken');\n\n  if (accessToken == null) {\n    return false;\n  } // 2\n  // - jwt 토큰 추출\n\n\n  const jwtToken = accessToken.replace('Bearer', ''); // - jwt 디코드\n\n  const decoded = jwt_decode(jwtToken); // - jwt 만료 예정시간  \n\n  const expiredTime = decoded.exp + '000'; // - 비교를 위한 현재 시간 가져오기\n\n  const currentTime = new Date().getTime(); // - 만료시간 비교\n\n  if (expiredTime <= currentTime) {\n    return false;\n  } // jwt 검증 성공\n\n\n  return true;\n};\n\nexport default verifJwt;","map":{"version":3,"sources":["/Users/shimys/Desktop/react-spring-workspace/thechallenge/frontend/src/components/auth/verifJwt.js"],"names":["jwt_decode","verifJwt","props","accessToken","localStorage","getItem","jwtToken","replace","decoded","expiredTime","exp","currentTime","Date","getTime"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB;AACA,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAApB;;AACA,MAAGF,WAAW,IAAI,IAAlB,EAAuB;AACnB,WAAO,KAAP;AACH,GALuB,CAOxB;AACA;;;AACA,QAAMG,QAAQ,GAAGH,WAAW,CAACI,OAAZ,CAAoB,QAApB,EAA6B,EAA7B,CAAjB,CATwB,CAUxB;;AACA,QAAMC,OAAO,GAAGR,UAAU,CAACM,QAAD,CAA1B,CAXwB,CAYxB;;AACA,QAAMG,WAAW,GAAGD,OAAO,CAACE,GAAR,GAAY,KAAhC,CAbwB,CAcxB;;AACA,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB,CAfwB,CAgBxB;;AACA,MAAGJ,WAAW,IAAIE,WAAlB,EAA+B;AAC3B,WAAO,KAAP;AACH,GAnBuB,CAqBxB;;;AACA,SAAO,IAAP;AACH,CAvBD;;AAyBA,eAAeV,QAAf","sourcesContent":["import jwt_decode from 'jwt-decode';\n/**\n * 페이지 전환시 JWT 인증을 진행\n * 1. accessToken이 있는가?  \n *  - 로컬스토리지에서 가져와서 검사\n * 2. JWT Token의 만료시간이 지났는가?\n *  - 정상적인 토큰일 경우 만료시간 검사\n * @returns \n *  - JWT 인증 성공 : true\n *  - JWT 인증 실패 : false\n */\nconst verifJwt = (props) => {\n    // 1\n    const accessToken = localStorage.getItem('AccessToken');\n    if(accessToken == null){\n        return false;\n    }\n\n    // 2\n    // - jwt 토큰 추출\n    const jwtToken = accessToken.replace('Bearer','');\n    // - jwt 디코드\n    const decoded = jwt_decode(jwtToken); \n    // - jwt 만료 예정시간  \n    const expiredTime = decoded.exp+'000';\n    // - 비교를 위한 현재 시간 가져오기\n    const currentTime = new Date().getTime();\n    // - 만료시간 비교\n    if(expiredTime <= currentTime) {\n        return false;\n    }\n\n    // jwt 검증 성공\n    return true;\n}\n\nexport default verifJwt;"]},"metadata":{},"sourceType":"module"}