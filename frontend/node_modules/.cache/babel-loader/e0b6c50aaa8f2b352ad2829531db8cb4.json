{"ast":null,"code":"var _jsxFileName = \"/Users/shimys/Desktop/react-spring-workspace/thechallenge/frontend/src/components/auth/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router';\nimport verifJwt from 'components/auth/verifJwt';\n/**\n * verifJwt(인증, 인가) True시 해당 컴포넌트로 이동, False시 로그인 페이지로 이동\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => verifJwt() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 13\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 9\n}, this);\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/shimys/Desktop/react-spring-workspace/thechallenge/frontend/src/components/auth/PrivateRoute.js"],"names":["React","Route","Redirect","verifJwt","PrivateRoute","component","Component","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AAEA;AACA;AACA;;;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,kBACb,QAAC,KAAD,OAAWA,IAAX;AAAiB,EAAA,MAAM,EAAEC,KAAK,IAC1BL,QAAQ,kBACR,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,UADQ,gBAER,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,QADR;;KAAMJ,Y;AAQN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router';\nimport verifJwt from 'components/auth/verifJwt';\n\n/**\n * verifJwt(인증, 인가) True시 해당 컴포넌트로 이동, False시 로그인 페이지로 이동\n */\nconst PrivateRoute = ({component: Component, ...rest}) => (\n        <Route {...rest} render={props => (\n            verifJwt() ? \n            <Component {...props} /> :\n            <Redirect to=\"/login\" />)} \n        />\n);\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}