{"ast":null,"code":"var _jsxFileName = \"/Users/shimys/Desktop/react-spring-workspace/thechallenge/frontend/src/components/auth/PublicRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router';\nimport verifJwt from 'components/auth/verifJwt';\n/**\n * restriced가 false이면 누구나 접근가능 -> 인증 절차 없음\n * \n * [인증된 유저가 특정 페이지에 접근하는것을 막고싶을때]\n * restriced가 true이면 verifJwt의 결과가 true시 유저화면 이동 \n *      => 로그인한 유저가 접근할 필요가 없는 페이지 login, signup 등\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PublicRoute = ({\n  component: Component,\n  restricted,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => verifJwt() && restricted ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/home\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 5\n}, this);\n\n_c = PublicRoute;\nexport default PublicRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["/Users/shimys/Desktop/react-spring-workspace/thechallenge/frontend/src/components/auth/PublicRoute.js"],"names":["React","Route","Redirect","verifJwt","PublicRoute","component","Component","restricted","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuBC,EAAAA,UAAvB;AAAmC,KAAGC;AAAtC,CAAD,kBAChB,QAAC,KAAD,OAAWA,IAAX;AAAiB,EAAA,MAAM,EAAEC,KAAK,IAC1BN,QAAQ,MAAMI,UAAd,gBACA,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UADA,gBAEA,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAML,W;AAQN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router';\nimport verifJwt from 'components/auth/verifJwt';\n\n/**\n * restriced가 false이면 누구나 접근가능 -> 인증 절차 없음\n * \n * [인증된 유저가 특정 페이지에 접근하는것을 막고싶을때]\n * restriced가 true이면 verifJwt의 결과가 true시 유저화면 이동 \n *      => 로그인한 유저가 접근할 필요가 없는 페이지 login, signup 등\n */\nconst PublicRoute = ({component: Component, restricted, ...rest}) => (\n    <Route {...rest} render={props => (\n        verifJwt() && restricted ?\n        <Redirect to=\"/home\" /> :\n        <Component {...props} />\n    )} />\n);\n\nexport default PublicRoute;\n"]},"metadata":{},"sourceType":"module"}